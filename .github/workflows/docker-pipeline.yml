name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: leonaidas

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for Postgres to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h postgres -p 5432; then
            echo "Postgres is ready!"
            exit 0
          fi
          echo "Waiting for Postgres... retry $i"
          sleep 5
        done
        echo "Postgres failed to start."
        exit 1

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:password@postgres:5432/leonaidas
      run: pytest

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/myproject:latest

  pull-and-run:
    needs: build-and-push  # Ensures this job runs after build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull Docker image
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/myproject:latest

    - name: Run Docker image
      run: docker run -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/myproject:latest

    - name: Check running container
      run: docker ps

